{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/Assignment1/src/components/templateMoviePage/index.js\";\nimport React from \"react\";\nimport MovieHeader from \"../headerMovie\";\nimport Grid from \"@mui/material/Grid\";\nimport ImageList from \"@mui/material/ImageList\";\nimport ImageListItem from \"@mui/material/ImageListItem\";\nimport { getMovieImages } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TemplateMoviePage = _ref => {\n  let {\n    movie,\n    children\n  } = _ref;\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"images\", {\n    id: movie.id\n  }], getMovieImages);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  const images = data.posters;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MovieHeader, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 5,\n      sx: {\n        padding: \"15px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          sx: {\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            justifyContent: \"space-around\"\n          },\n          children: /*#__PURE__*/_jsxDEV(ImageList, {\n            cols: 1,\n            children: images.map(image => /*#__PURE__*/_jsxDEV(ImageListItem, {\n              cols: 1,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `https://image.tmdb.org/t/p/w500/${image.file_path}`,\n                alt: image.poster_path\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 21\n              }, this)\n            }, image.file_path, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default TemplateMoviePage;","map":{"version":3,"sources":["/Users/user1/Desktop/Assignment1/src/components/templateMoviePage/index.js"],"names":["React","MovieHeader","Grid","ImageList","ImageListItem","getMovieImages","useQuery","Spinner","TemplateMoviePage","movie","children","data","error","isLoading","isError","id","message","images","posters","padding","display","flexWrap","justifyContent","map","image","file_path","poster_path"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,cAAT,QAA+B,oBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,YAApB;;;;AAEA,MAAMC,iBAAiB,GAAG,QAAyB;AAAA,MAAxB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAwB;AACjD,QAAM;AAAEC,IAAAA,IAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,MAAuCR,QAAQ,CACnD,CAAC,QAAD,EAAW;AAAES,IAAAA,EAAE,EAAEN,KAAK,CAACM;AAAZ,GAAX,CADmD,EAEnDV,cAFmD,CAArD;;AAKA,MAAIQ,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA,gBAAKF,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMC,MAAM,GAAGN,IAAI,CAACO,OAApB;AAEA,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,KAAK,EAAET;AAApB;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,EAAE,CAAzB;AAA4B,MAAA,EAAE,EAAE;AAAEU,QAAAA,OAAO,EAAE;AAAX,OAAhC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE;AAAK,UAAA,EAAE,EAAE;AACPC,YAAAA,OAAO,EAAE,MADF;AAEPC,YAAAA,QAAQ,EAAE,MAFH;AAGPC,YAAAA,cAAc,EAAE;AAHT,WAAT;AAAA,iCAKE,QAAC,SAAD;AACI,YAAA,IAAI,EAAE,CADV;AAAA,sBAEKL,MAAM,CAACM,GAAP,CAAYC,KAAD,iBACR,QAAC,aAAD;AAAqC,cAAA,IAAI,EAAE,CAA3C;AAAA,qCACA;AACI,gBAAA,GAAG,EAAG,mCAAkCA,KAAK,CAACC,SAAU,EAD5D;AAEI,gBAAA,GAAG,EAAED,KAAK,CAACE;AAFf;AAAA;AAAA;AAAA;AAAA;AADA,eAAoBF,KAAK,CAACC,SAA1B;AAAA;AAAA;AAAA;AAAA,oBADH;AAFL;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAqBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,kBACGf;AADH;AAAA;AAAA;AAAA;AAAA,cArBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADF;AA+BD,CA9CD;;AAgDA,eAAeF,iBAAf","sourcesContent":["import React from \"react\";\r\nimport MovieHeader from \"../headerMovie\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport ImageList from \"@mui/material/ImageList\";\r\nimport ImageListItem from \"@mui/material/ImageListItem\";\r\nimport { getMovieImages } from \"../../api/tmdb-api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../spinner'\r\n\r\nconst TemplateMoviePage = ({ movie, children }) => {\r\n  const { data , error, isLoading, isError } = useQuery(\r\n    [\"images\", { id: movie.id }],\r\n    getMovieImages\r\n  );\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n  const images = data.posters \r\n\r\n  return (\r\n    <>\r\n      <MovieHeader movie={movie} />\r\n\r\n      <Grid container spacing={5} sx={{ padding: \"15px\" }}>\r\n        <Grid item xs={3}>\r\n          <div sx={{\r\n            display: \"flex\",\r\n            flexWrap: \"wrap\",\r\n            justifyContent: \"space-around\",\r\n          }}>\r\n            <ImageList \r\n                cols={1}>\r\n                {images.map((image) => (\r\n                    <ImageListItem key={image.file_path} cols={1}>\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/w500/${image.file_path}`}\r\n                        alt={image.poster_path}\r\n                    />\r\n                    </ImageListItem>\r\n                ))}\r\n            </ImageList>\r\n          </div>\r\n        </Grid>\r\n\r\n        <Grid item xs={9}>\r\n          {children}\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TemplateMoviePage;"]},"metadata":{},"sourceType":"module"}