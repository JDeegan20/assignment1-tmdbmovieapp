{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/Assignment1/src/pages/upcomingMovies.js\";\nimport React from \"react\";\nimport { getUpcomingMovies } from \"../api/tmdb-api\";\nimport { useQuery } from 'react-query';\nimport Spinner from '../components/spinner';\nimport PageTemplate from '../components/templateMovieListPage';\nimport PlaylistAddIcon from '../components/cardIcons/addToPlaylist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpcomingMoviesPage = props => {\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery('upcoming', getUpcomingMovies);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  const movies = data.results;\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    title: \"Upcoming Movies\",\n    movies: movies,\n    action: movie => {\n      return /*#__PURE__*/_jsxDEV(PlaylistAddIcon, {\n        movie: movie\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 16\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\nexport default UpcomingMoviesPage;","map":{"version":3,"sources":["/Users/user1/Desktop/Assignment1/src/pages/upcomingMovies.js"],"names":["React","getUpcomingMovies","useQuery","Spinner","PageTemplate","PlaylistAddIcon","UpcomingMoviesPage","props","data","error","isLoading","isError","message","movies","results","movie"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAOC,eAAP,MAA4B,uCAA5B;;;AAEA,MAAMC,kBAAkB,GAAIC,KAAD,IAAW;AAEpC,QAAM;AAAGC,IAAAA,IAAH;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,MAAwCT,QAAQ,CAAC,UAAD,EAAaD,iBAAb,CAAtD;;AAEA,MAAIS,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA,gBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,QAAMC,MAAM,GAAGL,IAAI,CAACM,OAApB;AAEA,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,MAAM,EAAED,MAFV;AAGE,IAAA,MAAM,EAAGE,KAAD,IAAW;AACjB,0BAAO,QAAC,eAAD;AAAiB,QAAA,KAAK,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;AALH;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAtBD;;AAwBA,eAAeT,kBAAf","sourcesContent":["import React from \"react\";\r\nimport { getUpcomingMovies } from \"../api/tmdb-api\";\r\nimport { useQuery } from 'react-query';\r\nimport Spinner from '../components/spinner';\r\nimport PageTemplate from '../components/templateMovieListPage';\r\nimport PlaylistAddIcon from '../components/cardIcons/addToPlaylist';\r\n\r\nconst UpcomingMoviesPage = (props) => {\r\n\r\n  const {  data, error, isLoading, isError }  = useQuery('upcoming', getUpcomingMovies)\r\n\r\n  if (isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>\r\n  }  \r\n  const movies = data.results;\r\n\r\n  return (\r\n    <PageTemplate\r\n      title='Upcoming Movies'\r\n      movies={movies}\r\n      action={(movie) => {\r\n        return <PlaylistAddIcon movie={movie} />\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UpcomingMoviesPage;"]},"metadata":{},"sourceType":"module"}