{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/Assignment1/src/components/reviewForm/index.js\";\nimport React, { useContext, useState } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport { useForm } from \"react-hook-form\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ratings = [{\n  value: 5,\n  label: \"Excellent\"\n}, {\n  value: 4,\n  label: \"Good\"\n}, {\n  value: 3,\n  label: \"Average\"\n}, {\n  value: 2,\n  label: \"Poor\"\n}, {\n  value: 0,\n  label: \"Terrible\"\n}];\n\nconst ReviewForm = _ref => {\n  let {\n    movie,\n    history\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    errors,\n    reset\n  } = useForm();\n  const context = useContext(MoviesContext);\n  const [rating, setRating] = useState(3);\n\n  const handleRatingChange = event => {\n    setRating(event.target.value);\n  };\n\n  const onSubmit = review => {\n    review.movieId = movie.id;\n    review.rating = rating;\n    context.addReview(movie, review);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"div\",\n    sx: {\n      marginTop: '2em',\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      component: \"h2\",\n      variant: \"h3\",\n      children: \"Write a review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      sx: {\n        width: \"100%\",\n        \"& > * \": {\n          marginTop: \"2em\"\n        }\n      },\n      onSubmit: handleSubmit(onSubmit),\n      noValidate: true,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        sx: {\n          width: \"40ch\"\n        },\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        id: \"author\",\n        label: \"Author's name\",\n        name: \"author\",\n        autoFocus: true,\n        inputRef: register({\n          required: \"Author name required\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), errors.author && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"p\",\n        children: errors.author.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        required: true,\n        fullWidth: true,\n        name: \"content\",\n        label: \"Review text\",\n        id: \"content\",\n        multiline: true,\n        rows: 10,\n        inputRef: register({\n          required: \"No review text\",\n          minLength: {\n            value: 10,\n            message: \"Review is too short\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), errors.content && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        component: \"p\",\n        children: errors.content.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"select-rating\",\n        select: true,\n        variant: \"outlined\",\n        label: \"Rating Select\",\n        value: rating,\n        onChange: handleRatingChange,\n        helperText: \"Don't forget your rating\",\n        children: ratings.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          sx: {\n            marginRight: '2em'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"reset\",\n          variant: \"contained\",\n          color: \"secondary\",\n          sx: {\n            marginRight: '2em'\n          },\n          onClick: () => {\n            reset({\n              author: \"\",\n              content: \"\"\n            });\n          },\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n\nexport default ReviewForm;","map":{"version":3,"sources":["/Users/user1/Desktop/Assignment1/src/components/reviewForm/index.js"],"names":["React","useContext","useState","Button","TextField","Typography","Box","useForm","MoviesContext","MenuItem","ratings","value","label","ReviewForm","movie","history","register","handleSubmit","errors","reset","context","rating","setRating","handleRatingChange","event","target","onSubmit","review","movieId","id","addReview","marginTop","display","flexDirection","alignItems","width","required","author","message","minLength","content","map","option","marginRight"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { MoviesContext } from \"../../contexts/moviesContext\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\n\r\nconst ratings = [\r\n  {\r\n    value: 5,\r\n    label: \"Excellent\",\r\n  },\r\n  {\r\n    value: 4,\r\n    label: \"Good\",\r\n  },\r\n  {\r\n    value: 3,\r\n    label: \"Average\",\r\n  },\r\n  {\r\n    value: 2,\r\n    label: \"Poor\",\r\n  },\r\n  {\r\n    value: 0,\r\n    label: \"Terrible\",\r\n  },\r\n];\r\n\r\nconst ReviewForm = ({ movie, history }) => {\r\n  const { register, handleSubmit, errors, reset } = useForm();\r\n  const context = useContext(MoviesContext);\r\n  const [rating, setRating] = useState(3);\r\n\r\n  const handleRatingChange = (event) => {\r\n    setRating(event.target.value);\r\n  };\r\n\r\n  const onSubmit = (review) => {\r\n    review.movieId = movie.id;\r\n    review.rating = rating;\r\n    context.addReview(movie, review);\r\n  };\r\n\r\n  return (\r\n    <Box component=\"div\" sx={{\r\n        marginTop: '2em',\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n      }}>\r\n      <Typography component=\"h2\" variant=\"h3\">\r\n        Write a review\r\n      </Typography>\r\n      <form\r\n        sx={{\r\n            width: \"100%\",\r\n            \"& > * \": {\r\n              marginTop: \"2em\",\r\n            }}}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n        noValidate\r\n      >\r\n        <TextField\r\n          sx={{ width: \"40ch\" }}\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          id=\"author\"\r\n          label=\"Author's name\"\r\n          name=\"author\"\r\n          autoFocus\r\n          inputRef={register({ required: \"Author name required\" })}\r\n        />\r\n        {errors.author && (\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            {errors.author.message}\r\n          </Typography>\r\n        )}\r\n\r\n        <TextField\r\n          variant=\"outlined\"\r\n          margin=\"normal\"\r\n          required\r\n          fullWidth\r\n          name=\"content\"\r\n          label=\"Review text\"\r\n          id=\"content\"\r\n          multiline\r\n          rows={10}\r\n          inputRef={register({\r\n            required: \"No review text\",\r\n            minLength: { value: 10, message: \"Review is too short\" },\r\n          })}\r\n        />\r\n        {errors.content && (\r\n          <Typography variant=\"h6\" component=\"p\">\r\n            {errors.content.message}\r\n          </Typography>\r\n        )}\r\n        <TextField\r\n          id=\"select-rating\"\r\n          select\r\n          variant=\"outlined\"\r\n          label=\"Rating Select\"\r\n          value={rating}\r\n          onChange={handleRatingChange}\r\n          helperText=\"Don't forget your rating\"\r\n        >\r\n          {ratings.map((option) => (\r\n            <MenuItem key={option.value} value={option.value}>\r\n              {option.label}\r\n            </MenuItem>\r\n          ))}\r\n        </TextField>\r\n\r\n        <Box>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            sx={{marginRight: '2em'}}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            type=\"reset\"\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            sx={{marginRight: '2em'}}\r\n            onClick={() => {\r\n              reset({\r\n                author: \"\",\r\n                content: \"\",\r\n              });\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReviewForm;"]},"metadata":{},"sourceType":"module"}