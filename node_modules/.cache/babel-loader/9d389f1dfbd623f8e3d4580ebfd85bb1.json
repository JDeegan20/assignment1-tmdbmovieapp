{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/Assignment1/src/components/templateMovieListPage/index.js\";\nimport React, { useState } from \"react\";\nimport Header from \"../headerMovieList\";\nimport FilterCard from \"../filterMoviesCard\";\nimport MovieList from \"../movieList\";\nimport Grid from \"@mui/material/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction MovieListPageTemplate(_ref) {\n  let {\n    movies,\n    title,\n    action\n  } = _ref;\n  const [nameFilter, setNameFilter] = useState(\"\");\n  const [genreFilter, setGenreFilter] = useState(\"0\");\n  const genreId = Number(genreFilter);\n  let displayedMovies = movies.filter(m => {\n    return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n  }).filter(m => {\n    return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n  });\n\n  const handleChange = (type, value) => {\n    if (type === \"name\") setNameFilter(value);else setGenreFilter(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        children: /*#__PURE__*/_jsxDEV(FilterCard, {\n          onUserInput: handleChange,\n          titleFilter: nameFilter,\n          genreFilter: genreFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, \"find\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MovieList, {\n        action: action,\n        movies: displayedMovies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MovieListPageTemplate;","map":{"version":3,"sources":["/Users/user1/Desktop/Assignment1/src/components/templateMovieListPage/index.js"],"names":["React","useState","Header","FilterCard","MovieList","Grid","MovieListPageTemplate","movies","title","action","nameFilter","setNameFilter","genreFilter","setGenreFilter","genreId","Number","displayedMovies","filter","m","toLowerCase","search","genre_ids","includes","handleChange","type","value","padding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,SAASC,qBAAT,OAA0D;AAAA,MAA3B;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA;AAAjB,GAA2B;AACxD,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,GAAD,CAA9C;AACA,QAAMa,OAAO,GAAGC,MAAM,CAACH,WAAD,CAAtB;AAEA,MAAII,eAAe,GAAGT,MAAM,CACzBU,MADmB,CACXC,CAAD,IAAO;AACb,WAAOA,CAAC,CAACV,KAAF,CAAQW,WAAR,GAAsBC,MAAtB,CAA6BV,UAAU,CAACS,WAAX,EAA7B,MAA2D,CAAC,CAAnE;AACD,GAHmB,EAInBF,MAJmB,CAIXC,CAAD,IAAO;AACb,WAAOJ,OAAO,GAAG,CAAV,GAAcI,CAAC,CAACG,SAAF,CAAYC,QAAZ,CAAqBR,OAArB,CAAd,GAA8C,IAArD;AACD,GANmB,CAAtB;;AAQA,QAAMS,YAAY,GAAG,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACpC,QAAID,IAAI,KAAK,MAAb,EAAqBb,aAAa,CAACc,KAAD,CAAb,CAArB,KACKZ,cAAc,CAACY,KAAD,CAAd;AACN,GAHD;;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAApB;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAElB;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,SAAS,MAApB;AAAqB,MAAA,OAAO,EAAE,CAA9B;AAAA,8BACE,QAAC,IAAD;AAAiB,QAAA,IAAI,MAArB;AAAsB,QAAA,EAAE,EAAE,EAA1B;AAA8B,QAAA,EAAE,EAAE,CAAlC;AAAqC,QAAA,EAAE,EAAE,CAAzC;AAA4C,QAAA,EAAE,EAAE,CAAhD;AAAmD,QAAA,EAAE,EAAE,CAAvD;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,WAAW,EAAEe,YADf;AAEE,UAAA,WAAW,EAAEb,UAFf;AAGE,UAAA,WAAW,EAAEE;AAHf;AAAA;AAAA;AAAA;AAAA;AADF,SAAU,MAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,SAAD;AAAW,QAAA,MAAM,EAAEH,MAAnB;AAA2B,QAAA,MAAM,EAAEO;AAAnC;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;AACD,eAAeV,qBAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"../headerMovieList\";\r\nimport FilterCard from \"../filterMoviesCard\";\r\nimport MovieList from \"../movieList\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction MovieListPageTemplate({ movies, title, action }) {\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  const genreId = Number(genreFilter);\r\n\r\n  let displayedMovies = movies\r\n    .filter((m) => {\r\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    })\r\n    .filter((m) => {\r\n      return genreId > 0 ? m.genre_ids.includes(genreId) : true;\r\n    });\r\n\r\n  const handleChange = (type, value) => {\r\n    if (type === \"name\") setNameFilter(value);\r\n    else setGenreFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container sx={{ padding: '20px' }}>\r\n      <Grid item xs={12}>\r\n        <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5}>\r\n        <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n          <FilterCard\r\n            onUserInput={handleChange}\r\n            titleFilter={nameFilter}\r\n            genreFilter={genreFilter}\r\n          />\r\n        </Grid>\r\n        <MovieList action={action} movies={displayedMovies}></MovieList>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default MovieListPageTemplate;"]},"metadata":{},"sourceType":"module"}