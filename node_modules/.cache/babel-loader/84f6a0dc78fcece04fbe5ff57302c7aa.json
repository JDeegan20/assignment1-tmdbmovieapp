{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/Assignment1/src/pages/movieDetailsPage.js\";\nimport React from \"react\";\nimport { useParams } from 'react-router-dom';\nimport MovieDetails from \"../components/movieDetails/\";\nimport PageTemplate from \"../components/templateMoviePage\";\nimport { getMovie } from '../api/tmdb-api';\nimport { useQuery } from \"react-query\";\nimport Spinner from '../components/spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MoviePage = props => {\n  const {\n    id\n  } = useParams();\n  const {\n    data: movie,\n    error,\n    isLoading,\n    isError\n  } = useQuery([\"movie\", {\n    id: id\n  }], getMovie);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: movie ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(PageTemplate, {\n        movie: movie,\n        children: /*#__PURE__*/_jsxDEV(MovieDetails, {\n          movie: movie\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Waiting for movie details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\nexport default MoviePage;","map":{"version":3,"sources":["/Users/user1/Desktop/Assignment1/src/pages/movieDetailsPage.js"],"names":["React","useParams","MovieDetails","PageTemplate","getMovie","useQuery","Spinner","MoviePage","props","id","data","movie","error","isLoading","isError","message"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,SAASC,QAAT,QAAyB,iBAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAASR,SAAS,EAAxB;AAEA,QAAM;AAAES,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA,SAAtB;AAAiCC,IAAAA;AAAjC,MAA6CT,QAAQ,CACzD,CAAC,OAAD,EAAU;AAAEI,IAAAA,EAAE,EAAEA;AAAN,GAAV,CADyD,EAEzDL,QAFyD,CAA3D;;AAKA,MAAIS,SAAJ,EAAe;AACb,wBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,MAAIC,OAAJ,EAAa;AACX,wBAAO;AAAA,gBAAKF,KAAK,CAACG;AAAX;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAEH,sBACE;AAAA,cACGJ,KAAK,gBACJ;AAAA,6BACE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEA,KAArB;AAAA,+BACE,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,qBADI,gBAOJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ,mBADF;AAaD,CA7BD;;AA+BA,eAAeJ,SAAf","sourcesContent":["import React from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport MovieDetails from \"../components/movieDetails/\";\r\nimport PageTemplate from \"../components/templateMoviePage\";\r\nimport { getMovie } from '../api/tmdb-api'\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../components/spinner'\r\n\r\nconst MoviePage = (props) => {\r\n    const { id } = useParams();\r\n  \r\n    const { data: movie, error, isLoading, isError } = useQuery(\r\n      [\"movie\", { id: id }],\r\n      getMovie\r\n    );\r\n  \r\n    if (isLoading) {\r\n      return <Spinner />;\r\n    }\r\n  \r\n    if (isError) {\r\n      return <h1>{error.message}</h1>;\r\n    }\r\n\r\n  return (\r\n    <>\r\n      {movie ? (\r\n        <>\r\n          <PageTemplate movie={movie}>\r\n            <MovieDetails movie={movie} />\r\n          </PageTemplate>\r\n        </>\r\n      ) : (\r\n        <p>Waiting for movie details</p>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MoviePage;"]},"metadata":{},"sourceType":"module"}