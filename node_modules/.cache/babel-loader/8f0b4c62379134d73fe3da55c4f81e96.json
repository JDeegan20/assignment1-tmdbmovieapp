{"ast":null,"code":"var _jsxFileName = \"/Users/user1/Desktop/Assignment1/src/components/filterMoviesCard/index.js\";\nimport React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport Typography from \"@mui/material/Typography\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport TextField from \"@mui/material/TextField\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport img from '../../images/cinema.jpeg';\nimport { getGenres } from \"../../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from '../spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formControl = {\n  margin: 1,\n  minWidth: 220,\n  backgroundColor: \"rgb(255, 255, 255)\"\n};\nexport default function FilterMoviesCard(props) {\n  const {\n    data,\n    error,\n    isLoading,\n    isError\n  } = useQuery(\"genres\", getGenres);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 12\n    }, this);\n  }\n\n  const genres = data.genres;\n\n  if (genres[0].name !== \"All\") {\n    genres.unshift({\n      id: \"0\",\n      name: \"All\"\n    });\n  }\n\n  const handleChange = (e, type, value) => {\n    e.preventDefault();\n    props.onUserInput(type, value); // NEW\n  };\n\n  const handleTextChange = (e, props) => {\n    handleChange(e, \"name\", e.target.value);\n  };\n\n  const handleGenreChange = e => {\n    handleChange(e, \"genre\", e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 345,\n      backgroundColor: \"rgb(255, 128, 0)\"\n    },\n    variant: \"outlined\",\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h1\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), \"Filter the movies.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        sx: { ...formControl\n        },\n        id: \"filled-search\",\n        label: \"Search field\",\n        type: \"search\",\n        variant: \"filled\",\n        value: props.titleFilter,\n        onChange: handleTextChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: { ...formControl\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"genre-label\",\n          children: \"Genre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"genre-label\",\n          id: \"genre-select\",\n          defaultValue: \"\",\n          value: props.genreFilter,\n          onChange: handleGenreChange,\n          children: genres.map(genre => {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: genre.id,\n              children: genre.name\n            }, genre.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      sx: {\n        height: 300\n      },\n      image: img,\n      title: \"Filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        component: \"h1\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), \"Filter the movies.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/user1/Desktop/Assignment1/src/components/filterMoviesCard/index.js"],"names":["React","Card","CardMedia","CardContent","Typography","InputLabel","MenuItem","TextField","SearchIcon","FormControl","Select","img","getGenres","useQuery","Spinner","formControl","margin","minWidth","backgroundColor","FilterMoviesCard","props","data","error","isLoading","isError","message","genres","name","unshift","id","handleChange","e","type","value","preventDefault","onUserInput","handleTextChange","target","handleGenreChange","maxWidth","titleFilter","genreFilter","map","genre","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport img from '../../images/cinema.jpeg';\r\nimport { getGenres } from \"../../api/tmdb-api\";\r\nimport { useQuery } from \"react-query\";\r\nimport Spinner from '../spinner'\r\n\r\nconst formControl = \r\n  {\r\n    margin: 1,\r\n    minWidth: 220,\r\n    backgroundColor: \"rgb(255, 255, 255)\"\r\n  };\r\n\r\nexport default function FilterMoviesCard(props) {\r\n  const { data, error, isLoading, isError } = useQuery(\"genres\", getGenres);\r\n\r\n  if (isLoading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>;\r\n  }\r\n\r\n  const genres = data.genres;\r\n  if (genres[0].name !== \"All\"){\r\n    genres.unshift({ id: \"0\", name: \"All\" });\r\n  }\r\n\r\n  const handleChange = (e, type, value) => {\r\n    e.preventDefault();\r\n    props.onUserInput(type, value); // NEW\r\n  };\r\n\r\n  const handleTextChange = (e, props) => {\r\n    handleChange(e, \"name\", e.target.value);\r\n  };\r\n\r\n  const handleGenreChange = (e) => {\r\n    handleChange(e, \"genre\", e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card \r\n      sx={{\r\n        maxWidth: 345,\r\n        backgroundColor: \"rgb(255, 128, 0)\"\r\n      }} \r\n      variant=\"outlined\">\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          <SearchIcon fontSize=\"large\" />\r\n          Filter the movies.\r\n        </Typography>\r\n        <TextField\r\n          sx={{...formControl}}\r\n          id=\"filled-search\"\r\n          label=\"Search field\"\r\n          type=\"search\"\r\n          variant=\"filled\"\r\n          value={props.titleFilter}\r\n          onChange={handleTextChange}\r\n        />\r\n        <FormControl sx={{...formControl}}>\r\n          <InputLabel id=\"genre-label\">Genre</InputLabel>\r\n          <Select\r\n            labelId=\"genre-label\"\r\n            id=\"genre-select\"\r\n            defaultValue=\"\"\r\n            value={props.genreFilter}\r\n            onChange={handleGenreChange}\r\n          >\r\n            {genres.map((genre) => {\r\n              return (\r\n                <MenuItem key={genre.id} value={genre.id}>\r\n                  {genre.name}\r\n                </MenuItem>\r\n              );\r\n            })}\r\n          </Select>\r\n        </FormControl>\r\n      </CardContent>\r\n      <CardMedia\r\n        sx={{ height: 300 }}\r\n        image={img}\r\n        title=\"Filter\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          <SearchIcon fontSize=\"large\" />\r\n          Filter the movies.\r\n          <br />\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}